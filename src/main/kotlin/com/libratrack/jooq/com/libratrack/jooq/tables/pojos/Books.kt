/*
 * This file is generated by jOOQ.
 */
package com.libratrack.jooq.tables.pojos


import java.io.Serializable
import java.math.BigDecimal


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Books(
    val id: Int? = null,
    val title: String? = null,
    val price: BigDecimal? = null,
    val status: String? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Books = other as Books
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.title == null) {
            if (o.title != null)
                return false
        }
        else if (this.title != o.title)
            return false
        if (this.price == null) {
            if (o.price != null)
                return false
        }
        else if (this.price != o.price)
            return false
        if (this.status == null) {
            if (o.status != null)
                return false
        }
        else if (this.status != o.status)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.title == null) 0 else this.title.hashCode())
        result = prime * result + (if (this.price == null) 0 else this.price.hashCode())
        result = prime * result + (if (this.status == null) 0 else this.status.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Books (")

        sb.append(id)
        sb.append(", ").append(title)
        sb.append(", ").append(price)
        sb.append(", ").append(status)

        sb.append(")")
        return sb.toString()
    }
}
