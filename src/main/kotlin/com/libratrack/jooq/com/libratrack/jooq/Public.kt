/*
 * This file is generated by jOOQ.
 */
package com.libratrack.jooq


import com.libratrack.jooq.tables.Authors
import com.libratrack.jooq.tables.BookAuthors
import com.libratrack.jooq.tables.Books
import com.libratrack.jooq.tables.FlywaySchemaHistory

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.authors</code>.
     */
    val AUTHORS: Authors get() = Authors.AUTHORS

    /**
     * The table <code>public.book_authors</code>.
     */
    val BOOK_AUTHORS: BookAuthors get() = BookAuthors.BOOK_AUTHORS

    /**
     * The table <code>public.books</code>.
     */
    val BOOKS: Books get() = Books.BOOKS

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Authors.AUTHORS,
        BookAuthors.BOOK_AUTHORS,
        Books.BOOKS,
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY
    )
}
